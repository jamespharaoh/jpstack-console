#!/usr/bin/env ruby

source, dest = ARGV

source_dir = source.split("/")[0...2].join("/")
source_package = source.split("/")[2..-1].join(".")
dest_dir = dest.split("/")[0...2].join("/")
dest_package = dest.split("/")[2..-1].join(".")

Dir.glob(
	"%s/%s/**/*" % [
		source_dir,
		source_package.gsub(".", "/"),
	]
).each do
	|name|

	match_data = /^#{Regexp.escape source_dir}\/#{Regexp.escape(source_package.gsub(".", "/"))}\/(.+)\.(java|xml)$/.match(name)
	raise "error" unless match_data

	dir_name = match_data[1].split("/")[0..-2].join("/")
	base_name = match_data[1].split("/")[-1]
	extension = match_data[2]

	puts "mkdir -p %s/%s/%s" % [
		dest_dir,
		dest_package.gsub(".", "/"),
		dir_name,
	]

	puts "mv %s/%s/%s/%s.%s %s/%s/%s/%s.%s" % [
		source_dir,
		source_package.gsub(".", "/"),
		dir_name,
		base_name,
		extension,
		dest_dir,
		dest_package.gsub(".", "/"),
		dir_name,
		base_name,
		extension,
	]

	puts "sed --in-place 's/^package %s;$/package %s;/' %s/%s/%s/%s.%s" % [
		source_package,
		dest_package,
		dest_dir,
		dest_package.gsub(".", "/"),
		dir_name,
		base_name,
		extension,
	]

	puts "sed --in-place 's/^import %s\\./import %s./' $(find */src -name '*.java')" % [
		source_package.gsub(".", "\\."),
		dest_package,
	]

end

puts "rm -r %s/%s" % [
	source_dir,
	source_package.gsub(".", "/"),
]
